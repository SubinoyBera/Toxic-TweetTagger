name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test-ops:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install uv package manager
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: install dependencies in virtual environment
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install -r requirements.txt

      - name: run linters
        run: |
          source .venv/bin/activate
          tox -e lint -e format_check -e type_check

      - name: run ml pipeline
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
          MLFLOW_URI: ${{ secrets.MLFLOW_URI }}
        run: |
          source .venv/bin/activate
          dvc repro

      - name: run model tests
        id: model_test
        continue-on-error: true
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
          MLFLOW_URI: ${{ secrets.MLFLOW_URI }}
        run: |
          source .venv/bin/activate
          tox -e test_model

      - name: promote model to production
        id: promote_model
        if: steps.model_test.outcome == 'success'
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
          MLFLOW_URI: ${{ secrets.MLFLOW_URI }}
        run: |
          source .venv/bin/activate
          python operations/promote_model.py

      - name: run app/api tests
        if: steps.promote_model.outcome == 'success'
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
          MLFLOW_URI: ${{ secrets.MLFLOW_URI }}
        run: |
          source .venv/bin/activate
          tox -e test_app

      - name: upload pipeline logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: logs/