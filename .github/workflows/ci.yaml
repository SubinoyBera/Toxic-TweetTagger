name: CI Pipeline
  
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test-ops:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install -r requirements.txt

    - name: run linters
      run: |
        tox -e lint, format_check, type_check

    - name: run ml pipeline
      env:
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        MLFLOW_URI: ${{ secrets.MLLFOW_URI }}
      run: |
        dvc repro

    - name: run model tests
      env:
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        MLFLOW_URI: ${{ secrets.MLLFOW_URI }}
      run: |
        pytest tests/test_model.py --disable-warnings -v

    - name: promote model to production
      if: success()
      env:
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        MLFLOW_URI: ${{ secrets.MLLFOW_URI }}
      run: |
        python operations/promote_model.py

    - name: run app/api tests
      if: success()
      env:
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        MLFLOW_URI: ${{ secrets.MLLFOW_URI }}
      run: |
        pytest tests/test_app.py --disable-warnings -v